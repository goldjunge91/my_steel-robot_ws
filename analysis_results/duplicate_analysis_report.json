{
  "summary": {
    "total_packages_analyzed": 12,
    "duplicate_pairs_found": 2,
    "duplicate_types": {
      "URDF/description overlap": 2
    }
  },
  "duplicate_matches": [
    {
      "package1": "mecabridge_hardware",
      "package2": "robot_hardware_interfaces",
      "similarity_score": 0.3,
      "duplicate_type": "URDF/description overlap",
      "evidence": [
        "Both packages implement SystemInterface: mecabridge_hardware and robot_hardware_interfaces"
      ],
      "recommendation": "Merge into single robot_description package"
    },
    {
      "package1": "robot",
      "package2": "robot_description",
      "similarity_score": 0.4,
      "duplicate_type": "URDF/description overlap",
      "evidence": [
        "Both packages define robot URDF: robot and robot_description"
      ],
      "recommendation": "Merge into single robot_description package"
    }
  ],
  "package_fingerprints": {
    "mecabridge_hardware": {
      "name": "mecabridge_hardware",
      "path": "/mnt/c/GIT/my_steel/my_steel-robot_ws/src/mecabridge_hardware",
      "file_types": {
        "": 15,
        ".txt": 2,
        ".sh": 10,
        ".xml": 5,
        ".md": 13,
        ".sample": 13,
        ".idx": 1,
        ".pack": 1,
        ".yaml": 11,
        ".cmake": 1,
        ".zip": 1,
        ".cpp": 48,
        ".hpp": 20,
        ".h": 12,
        ".py": 11,
        ".urdf": 1
      },
      "urdf_files": [
        "test_robot.urdf"
      ],
      "launch_files": [
        "fake_robot.launch.py",
        "mecabridge_differential.launch.py",
        "mecabridge_differential_enhanced.launch.py",
        "mecabridge_four_wheel.launch.py",
        "mecabridge_hardware.launch.py",
        "mecabridge_mecanum.launch.py",
        "test_robot.launch.py",
        "test_controller_integration.launch.py",
        "test_launch_functionality.py"
      ],
      "config_files": [
        "mecabridge_differential_controller.yaml",
        "mecabridge_differential_enhanced.yaml",
        "mecabridge_example_configs.yaml",
        "mecabridge_four_wheel_controller.yaml",
        "mecabridge_hardware_params.yaml",
        "mecabridge_mecanum_controller.yaml",
        "mecabridge_mecanum_enhanced.yaml",
        "robot_controller_example.yaml",
        "test_controllers.yaml",
        "test_mecabridge_hardware.yaml",
        "test_mecabridge_hardware_interface.yaml"
      ],
      "source_files": [
        "actuators.cpp",
        "actuators.hpp",
        "enc.cpp",
        "esc_servo.cpp",
        "frame_parser.cpp",
        "frame_parser.hpp",
        "main.cpp",
        "motors.cpp",
        "term.cpp",
        "feature_config.hpp",
        "mecabridge_hardware.hpp",
        "crc16.hpp",
        "frame.hpp",
        "watchdog.hpp",
        "config.hpp",
        "serial.hpp",
        "scaling.hpp",
        "loopback_serial_backend.hpp",
        "insert_license_headers.py",
        "mecabridge_hardware.cpp",
        "mecabridge_hardware_interface.cpp",
        "mecabridge_hardware_interface_temp.cpp",
        "mecabridge_serial_protocol.cpp",
        "wheel.cpp",
        "config.cpp",
        "config.hpp",
        "latency_tracker.cpp",
        "latency_tracker.hpp",
        "crc16.cpp",
        "crc16.hpp",
        "frame.cpp",
        "frame.hpp",
        "watchdog.cpp",
        "watchdog.hpp",
        "loopback_serial_backend.cpp",
        "loopback_serial_backend.hpp",
        "mock_serial_backend.hpp",
        "serial_backend.hpp",
        "integration_test_node.cpp",
        "mock_serial.hpp",
        "testable_mecabridge_serial_protocol.cpp",
        "test_mecabridge_hardware_interface.cpp",
        "test_mecabridge_integration.cpp",
        "test_mecabridge_serial_protocol.cpp",
        "test_mecabridge_serial_protocol_comprehensive.cpp",
        "test_mecabridge_serial_protocol_simple.cpp",
        "test_mecabridge_serial_protocol_unit.cpp",
        "test_config.cpp",
        "test_feature_toggles.cpp",
        "test_mecabridge_hardware_interface.cpp",
        "test_esc_servo_limits.cpp",
        "test_latency_measurement.cpp",
        "test_serial_loopback.cpp",
        "test_watchdog_end_to_end.cpp",
        "test_latency_tracker.cpp",
        "test_crc16.cpp",
        "test_frame_errors.cpp",
        "test_frame_roundtrip.cpp",
        "test_protocol_empty.cpp",
        "test_protocol_handshake.cpp",
        "test_scaling.cpp",
        "test_watchdog.cpp",
        "example_usage.py",
        "testable_mecabridge_serial_protocol.cpp",
        "test_mecabridge_hardware_interface.cpp",
        "test_mecabridge_integration.cpp",
        "test_mecabridge_serial_protocol.cpp",
        "test_mecabridge_serial_protocol_comprehensive.cpp",
        "test_mecabridge_serial_protocol_simple.cpp",
        "test_mecabridge_serial_protocol_unit.cpp"
      ],
      "hardware_interfaces": [
        "ros2_control_interface",
        "system_interface",
        "ros2_control_interface",
        "system_interface",
        "mecanum_drive",
        "differential_drive",
        "ros2_control_interface",
        "system_interface",
        "mecanum_drive",
        "differential_drive",
        "differential_drive",
        "mecanum_drive",
        "differential_drive",
        "ros2_control_interface",
        "mecanum_drive",
        "differential_drive",
        "ros2_control_interface",
        "system_interface",
        "mecanum_drive",
        "differential_drive",
        "differential_drive",
        "differential_drive",
        "differential_drive",
        "differential_drive",
        "ros2_control_interface",
        "ros2_control_interface",
        "differential_drive",
        "ros2_control_interface",
        "mecanum_drive",
        "differential_drive",
        "ros2_control_interface",
        "system_interface",
        "mecanum_drive",
        "differential_drive",
        "differential_drive",
        "differential_drive",
        "differential_drive",
        "differential_drive",
        "ros2_control_interface",
        "system_interface",
        "python_hardware_interface",
        "python_hardware_interface"
      ],
      "content_hash": "dd45c78c779443232738c991180d7c07",
      "functionality_keywords": "{'controller', 'robot_description', 'hardware_interface', 'simulation', 'hardware', 'mecabridge'}"
    },
    "open_manipulator_x_description": {
      "name": "open_manipulator_x_description",
      "path": "/mnt/c/GIT/my_steel/my_steel-robot_ws/src/open_manipulator_x/open_manipulator_x_description",
      "file_types": {
        ".rst": 1,
        ".txt": 1,
        ".xml": 1,
        ".in": 1,
        ".stl": 7,
        ".xacro": 5
      },
      "urdf_files": [
        "body.xacro",
        "gazebo.xacro",
        "materials.xacro",
        "open_manipulator_x_macro.xacro",
        "ros2_control.xacro"
      ],
      "launch_files": [],
      "config_files": [],
      "source_files": [],
      "hardware_interfaces": [],
      "content_hash": "83ee5df8270ae633249d27df24592841",
      "functionality_keywords": "{'x', 'controller', 'robot_description', 'manipulator', 'description', 'simulation', 'open'}"
    },
    "open_manipulator_x_joy": {
      "name": "open_manipulator_x_joy",
      "path": "/mnt/c/GIT/my_steel/my_steel-robot_ws/src/open_manipulator_x/open_manipulator_x_joy",
      "file_types": {
        ".txt": 1,
        ".xml": 1,
        ".yaml": 2,
        ".hpp": 4,
        ".cpp": 4
      },
      "urdf_files": [],
      "launch_files": [],
      "config_files": [
        "joy_servo.yaml",
        "servo.yaml"
      ],
      "source_files": [
        "joy2servo.hpp",
        "joy_control.hpp",
        "joy_servo_node.hpp",
        "manipulation_controller.hpp",
        "joy2servo.cpp",
        "joy_control.cpp",
        "joy_servo_node.cpp",
        "manipulation_controller.cpp"
      ],
      "hardware_interfaces": [],
      "content_hash": "cf77de0d085e7978500d20a60aab4420",
      "functionality_keywords": "{'x', 'controller', 'manipulator', 'joy', 'open'}"
    },
    "open_manipulator_x_moveit": {
      "name": "open_manipulator_x_moveit",
      "path": "/mnt/c/GIT/my_steel/my_steel-robot_ws/src/open_manipulator_x/open_manipulator_x_moveit",
      "file_types": {
        "": 1,
        ".txt": 1,
        ".xml": 1,
        ".yaml": 5,
        ".rviz": 1,
        ".srdf": 1,
        ".py": 4,
        ".cpp": 2
      },
      "urdf_files": [],
      "launch_files": [
        "move_group.launch.py",
        "rviz.launch.py",
        "servo.launch.py",
        "setup_assistant.launch.py"
      ],
      "config_files": [
        "joint_limits.yaml",
        "kinematics.yaml",
        "moveit_controllers.yaml",
        "ompl_planning.yaml",
        "pilz_cartesian_limits.yaml"
      ],
      "source_files": [
        "dock.cpp",
        "home.cpp"
      ],
      "hardware_interfaces": [],
      "content_hash": "8f4f892c0dd8e68790716be03a128f7a",
      "functionality_keywords": "{'x', 'controller', 'manipulator', 'moveit', 'open'}"
    },
    "robot": {
      "name": "robot",
      "path": "/mnt/c/GIT/my_steel/my_steel-robot_ws/src/robot",
      "file_types": {
        "": 18,
        ".txt": 1,
        ".md": 23,
        ".xml": 1,
        ".toml": 1,
        ".code-workspace": 1,
        ".json": 3,
        ".sample": 13,
        ".idx": 1,
        ".pack": 1,
        ".yml": 1,
        ".rviz": 3,
        ".yaml": 10,
        ".xacro": 11,
        ".pdf": 7,
        ".jpg": 1,
        ".png": 2,
        ".py": 18,
        ".world": 3
      },
      "urdf_files": [
        "camera.xacro",
        "common_macros.xacro",
        "depth_camera.xacro",
        "face.xacro",
        "gazebo_control.xacro",
        "gazebo_control_old.xacro",
        "inertial_macros.xacro",
        "lidar.xacro",
        "robot.urdf.xacro",
        "robot_core.xacro",
        "ros2_control.xacro"
      ],
      "launch_files": [
        "camera.launch.py",
        "camera_1.launch.py",
        "dashboard.launch.py",
        "joystick.launch.py",
        "joystick_xbox.launch.py",
        "joystick_xbox_mecanum_pico.launch.py",
        "launch_empty_world.launch.py",
        "launch_robot.launch.py",
        "launch_robot_pi.launch.py",
        "launch_sim.launch.py",
        "launch_sim.launch_old.py",
        "rplidar.launch.py",
        "rsp.launch.py"
      ],
      "config_files": [
        "xacro-smoke-test.yml",
        "gazebo_params.yaml",
        "gaz_ros2_ctl_use_sim.yaml",
        "joystick.yaml",
        "my_controllers.yaml",
        "my_controllers_mecanum.yaml",
        "my_controllers_mecanum_v2.yaml",
        "tb6612_bridge.yaml",
        "twist_mux.yaml",
        "xbox_elite_config.yaml",
        "xbox_mecanum_teleop.yaml"
      ],
      "source_files": [
        "tf_odometry_relay.py",
        "wait_for_service.py",
        "conftest.py",
        "test_placeholder.py",
        "test_placeholder.py"
      ],
      "hardware_interfaces": [],
      "content_hash": "c3c44e20550dfb28cadeaeacb39cb97d",
      "functionality_keywords": "{'vision', 'robot', 'robot_description', 'controller', 'simulation'}"
    },
    "micro_ros_agent": {
      "name": "micro_ros_agent",
      "path": "/mnt/c/GIT/my_steel/my_steel-robot_ws/src/robot-micro-ROS-Agent/micro_ros_agent",
      "file_types": {
        ".rst": 1,
        ".txt": 1,
        ".xml": 3,
        ".md": 1,
        ".py": 4,
        ".cmake": 1,
        ".hpp": 4,
        ".cpp": 5
      },
      "urdf_files": [],
      "launch_files": [
        "micro_ros_agent_launch.py"
      ],
      "config_files": [],
      "source_files": [
        "Xml_interface_gen.py",
        "Xml_read_default_profiles.py",
        "Agent.hpp",
        "graph_manager.hpp",
        "graph_typesupport.hpp",
        "demangle.hpp",
        "main.cpp",
        "Agent.cpp",
        "graph_manager.cpp",
        "graph_typesupport.cpp",
        "demangle.cpp",
        "__init__.py"
      ],
      "hardware_interfaces": [
        "micro_ros",
        "micro_ros",
        "micro_ros",
        "micro_ros",
        "micro_ros",
        "micro_ros_python",
        "micro_ros_python",
        "micro_ros_python"
      ],
      "content_hash": "9012d5ad49c19e7f43ac69b38c99d5f6",
      "functionality_keywords": "{'ros', 'micro', 'hardware_interface', 'agent'}"
    },
    "robot_controller": {
      "name": "robot_controller",
      "path": "/mnt/c/GIT/my_steel/my_steel-robot_ws/src/robot_controller",
      "file_types": {
        "": 14,
        ".xml": 1,
        ".md": 1,
        ".cfg": 1,
        ".py": 5,
        ".sample": 13,
        ".idx": 1,
        ".pack": 1,
        ".yaml": 8
      },
      "urdf_files": [],
      "launch_files": [
        "controller.launch.py",
        "manipulator.launch.py"
      ],
      "config_files": [
        "diff_drive_controller.yaml",
        "diff_drive_manipulator_controller.yaml",
        "mecanum_drive_controller.yaml",
        "mecanum_drive_manipulator_controller.yaml",
        "diff_drive_controller.yaml",
        "diff_drive_manipulator_controller.yaml",
        "mecanum_drive_controller.yaml",
        "mecanum_drive_manipulator_controller.yaml"
      ],
      "source_files": [
        "setup.py",
        "test_pep257.py",
        "test_xacro.py"
      ],
      "hardware_interfaces": [],
      "content_hash": "a880c4d0e572bf6e4627495c1efd7297",
      "functionality_keywords": "{'controller', 'robot', 'robot_description'}"
    },
    "mecanum_drive_controller": {
      "name": "mecanum_drive_controller",
      "path": "/mnt/c/GIT/my_steel/my_steel-robot_ws/src/robot_controllers/mecanum_drive_controller",
      "file_types": {
        ".rst": 2,
        ".txt": 1,
        ".xml": 2,
        ".hpp": 3,
        ".h": 1,
        ".cpp": 3,
        ".yaml": 1
      },
      "urdf_files": [],
      "launch_files": [],
      "config_files": [
        "mecanum_drive_controller_parameter.yaml"
      ],
      "source_files": [
        "mecanum_drive_controller.hpp",
        "odometry.hpp",
        "speed_limiter.hpp",
        "mecanum_drive_controller.cpp",
        "odometry.cpp",
        "speed_limiter.cpp"
      ],
      "hardware_interfaces": [
        "ros2_control_interface",
        "mecanum_drive",
        "differential_drive",
        "mecanum_drive",
        "differential_drive",
        "mecanum_drive",
        "differential_drive",
        "ros2_control_interface",
        "mecanum_drive",
        "differential_drive",
        "mecanum_drive",
        "differential_drive",
        "mecanum_drive",
        "differential_drive"
      ],
      "content_hash": "1e5c11f7b34756b6d80d8484d96f08c9",
      "functionality_keywords": "{'drive', 'mecanum', 'controller'}"
    },
    "robot_description": {
      "name": "robot_description",
      "path": "/mnt/c/GIT/my_steel/my_steel-robot_ws/src/robot_description",
      "file_types": {
        "": 13,
        ".txt": 1,
        ".xml": 1,
        ".md": 1,
        ".sample": 13,
        ".idx": 1,
        ".pack": 1,
        ".yaml": 6,
        ".in": 1,
        ".py": 4,
        ".stl": 3,
        ".dae": 14,
        ".rviz": 1,
        ".xacro": 15
      },
      "urdf_files": [
        "robot.urdf.xacro",
        "robot_xl.urdf.xacro",
        "gazebo.urdf.xacro",
        "ros2_control.urdf.xacro",
        "webots.urdf.xacro",
        "body.urdf.xacro",
        "rosbot_macro.urdf.xacro",
        "wheel.urdf.xacro",
        "vl53lox.urdf.xacro",
        "body.urdf.xacro",
        "robot_xl_macro.urdf.xacro",
        "rosbot_xl_macro.urdf.xacro",
        "wheel.urdf.xacro",
        "antenna.urdf.xacro",
        "camera_mount.urdf.xacro"
      ],
      "launch_files": [
        "load_urdf.launch.py",
        "rviz.launch.py"
      ],
      "config_files": [
        "basic.yaml",
        "autonomy.yaml",
        "basic.yaml",
        "manipulation.yaml",
        "manipulation_pro.yaml",
        "telepresence.yaml"
      ],
      "source_files": [
        "test_pep257.py",
        "test_xacro.py"
      ],
      "hardware_interfaces": [],
      "content_hash": "8f8562d33ce321673e3ee2b8391a27d8",
      "functionality_keywords": "{'vision', 'robot', 'robot_description', 'autonomy', 'controller', 'description', 'simulation'}"
    },
    "robot_hardware_interfaces": {
      "name": "robot_hardware_interfaces",
      "path": "/mnt/c/GIT/my_steel/my_steel-robot_ws/src/robot_hardware_interfaces",
      "file_types": {
        "": 42,
        ".txt": 1,
        ".xml": 2,
        ".md": 1,
        ".sample": 13,
        ".idx": 1,
        ".pack": 1,
        ".yaml": 1,
        ".hpp": 3,
        ".py": 1,
        ".cpp": 2,
        ".xacro": 1
      },
      "urdf_files": [
        "ros2_control.urdf.xacro"
      ],
      "launch_files": [
        "example_diff_drive.launch.py"
      ],
      "config_files": [
        "example_diff_drive_controller.yaml"
      ],
      "source_files": [
        "robot_imu_sensor.hpp",
        "robot_system.hpp",
        "visibility_control.hpp",
        "robot_imu_sensor.cpp",
        "robot_system.cpp"
      ],
      "hardware_interfaces": [
        "ros2_control_interface",
        "sensor_interface",
        "ros2_control_interface",
        "system_interface",
        "ros2_control_interface",
        "sensor_interface",
        "ros2_control_interface",
        "system_interface",
        "python_hardware_interface"
      ],
      "content_hash": "8934d0b3bc1f3b3e89c0176ef0219b3f",
      "functionality_keywords": "{'interfaces', 'robot', 'controller', 'robot_description', 'hardware_interface', 'hardware'}"
    },
    "robot_localization": {
      "name": "robot_localization",
      "path": "/mnt/c/GIT/my_steel/my_steel-robot_ws/src/robot_localization",
      "file_types": {
        "": 32,
        ".txt": 1,
        ".xml": 1,
        ".md": 1,
        ".sample": 13,
        ".idx": 1,
        ".pack": 1,
        ".yaml": 1,
        ".bash": 2,
        ".ps1": 2,
        ".sh": 2,
        ".zsh": 2,
        ".py": 3,
        ".log": 2
      },
      "urdf_files": [],
      "launch_files": [
        "ekf.launch.py"
      ],
      "config_files": [
        "ekf.yaml"
      ],
      "source_files": [
        "_local_setup_util_ps1.py",
        "_local_setup_util_sh.py"
      ],
      "hardware_interfaces": [],
      "content_hash": "dfd5d418996c160ba1daafdede313550",
      "functionality_keywords": "{'robot', 'localization', 'robot_description'}"
    },
    "robot_utils": {
      "name": "robot_utils",
      "path": "/mnt/c/GIT/my_steel/my_steel-robot_ws/src/robot_utils",
      "file_types": {
        "": 23,
        ".xml": 1,
        ".md": 1,
        ".cfg": 1,
        ".py": 8,
        ".sample": 13,
        ".idx": 1,
        ".pack": 1,
        ".yaml": 2
      },
      "urdf_files": [],
      "launch_files": [
        "laser_filter.launch.py"
      ],
      "config_files": [
        "laser_filter.yaml",
        "laser_filter.yaml"
      ],
      "source_files": [
        "setup.py",
        "flash_firmware.py",
        "flash_firmware_uart.py",
        "flash_firmware_usb.py",
        "utils.py",
        "__init__.py",
        "test_pep257.py"
      ],
      "hardware_interfaces": [],
      "content_hash": "2e2916353d661b4fa200e2c6726d6b18",
      "functionality_keywords": "{'robot', 'utils', 'robot_description'}"
    }
  },
  "recommendations": {
    "mecabridge_hardware_vs_robot_hardware_interfaces": "Merge into single robot_description package",
    "robot_vs_robot_description": "Merge into single robot_description package",
    "robot_description_consolidation": "Merge robot and robot_description packages into single robot_description",
    "hardware_interface_consolidation": "Merge robot_hardware and mecabridge_hardware into unified robot_hardware",
    "controller_consolidation": "Merge robot_controller and robot_controllers into single robot_controllers"
  }
}