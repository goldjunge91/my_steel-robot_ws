# syntax=docker/dockerfile:1.4
FROM --platform=linux/arm64 ros:humble-ros-base

ARG USERNAME=ros
ARG WORKSPACE=/workspace

ENV DEBIAN_FRONTEND=noninteractive \
    ROS_DISTRO=humble \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8

RUN apt-get update && apt-get install -y --no-install-recommends \
    bash-completion \
    build-essential \
    ca-certificates \
    cmake \
    curl \
    git \
    gnupg \
    lsb-release \
    ninja-build \
    python3-pip \
    python3-colcon-common-extensions \
    python3-rosdep \
    python3-vcstool \
    sudo \
    wget \
    ros-humble-controller-interface \
    ros-humble-hardware-interface \
    ros-humble-ros2-control \
    ros-humble-ros2-controllers \
    ros-humble-robot-localization \
    ros-humble-micro-ros-msgs \
    && rm -rf /var/lib/apt/lists/*

RUN pip3 install --no-cache-dir \
    pytest-cov \
    pytest-timeout \
    vcstool

RUN rosdep init 2>/dev/null || true

RUN useradd -m -s /bin/bash "${USERNAME}" && \
    echo "${USERNAME} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers && \
    mkdir -p "${WORKSPACE}" && \
    chown -R "${USERNAME}:${USERNAME}" "${WORKSPACE}"

WORKDIR ${WORKSPACE}

# Pre-populate workspace so CI/container tests can run without host bind mounts
COPY --chown=${USERNAME}:${USERNAME} src ${WORKSPACE}/src
COPY --chown=${USERNAME}:${USERNAME} scripts ${WORKSPACE}/scripts
COPY --chown=${USERNAME}:${USERNAME} .github ${WORKSPACE}/.github
COPY --chown=${USERNAME}:${USERNAME} setup.sh build.sh test.sh ${WORKSPACE}/

RUN echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> /etc/skel/.bashrc && \
    echo "if [ -f ${WORKSPACE}/install/setup.bash ]; then source ${WORKSPACE}/install/setup.bash; fi" >> /etc/skel/.bashrc

USER ${USERNAME}

# Set AMENT_TRACE_SETUP_FILES to prevent unbound variable errors
ENV AMENT_TRACE_SETUP_FILES=""

# Pre-create directories that colcon will need with proper permissions
RUN mkdir -p ${WORKSPACE}/build ${WORKSPACE}/install ${WORKSPACE}/log && \
    touch ~/.bashrc && \
    echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> ~/.bashrc && \
    echo "if [ -f ${WORKSPACE}/install/setup.bash ]; then source ${WORKSPACE}/install/setup.bash; fi" >> ~/.bashrc

ENV DEBIAN_FRONTEND=dialog

CMD ["/bin/bash"]
