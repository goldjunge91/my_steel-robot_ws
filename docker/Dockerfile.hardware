ARG ROS_DISTRO=humble
ARG ROBOT_ROS_BUILD_TYPE=hardware

FROM ros:${ROS_DISTRO}-ros-base AS builder
ARG ROS_DISTRO
ARG ROBOT_ROS_BUILD_TYPE

ENV DEBIAN_FRONTEND=noninteractive
WORKDIR /ros2_ws
ENV ROBOT_ROS_BUILD_TYPE=${ROBOT_ROS_BUILD_TYPE}

# Install build tooling and dependencies that are not resolved via rosdep
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    python3-colcon-common-extensions \
    python3-rosdep \
    python3-pip \
    ros-dev-tools \
    ros-${ROS_DISTRO}-teleop-twist-keyboard

# Bring workspace sources into the container
COPY src/ src/

# Prepare rosdep and install package dependencies
RUN rosdep init 2>/dev/null || true && \
    rosdep update --rosdistro ${ROS_DISTRO} && \
    rosdep install --from-paths src \
      --ignore-src \
      --rosdistro ${ROS_DISTRO} \
      -y

RUN rm -rf /var/lib/apt/lists/*

# Build the workspace once dependencies are resolved
RUN . /opt/ros/${ROS_DISTRO}/setup.sh && \
    colcon build \
      --merge-install \
      --cmake-args -DCMAKE_BUILD_TYPE=Release

FROM ros:${ROS_DISTRO}-ros-base
ARG ROS_DISTRO
ARG ROBOT_ROS_BUILD_TYPE

ENV DEBIAN_FRONTEND=noninteractive
WORKDIR /ros2_ws
ENV ROBOT_ROS_BUILD_TYPE=${ROBOT_ROS_BUILD_TYPE}

# Runtime tools required on the robot
RUN apt-get update && apt-get install -y \
    python3-requests \
    ros-${ROS_DISTRO}-teleop-twist-keyboard \
    && rm -rf /var/lib/apt/lists/*

# Copy the built workspace from the builder stage
COPY --from=builder /ros2_ws/install /ros2_ws/install

# Provide access to the source tree for debugging
COPY --from=builder /ros2_ws/src /ros2_ws/src

# Create log directory expected by ROS
RUN mkdir -p /var/log/robot

ENV ROS_DOMAIN_ID=0
ENV RMW_IMPLEMENTATION=rmw_fastrtps_cpp
ENV ROS_LOG_DIR=/var/log/robot

CMD ["bash"]
