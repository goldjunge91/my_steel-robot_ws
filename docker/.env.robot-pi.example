# ============================================================================
# Environment Configuration for my_steel Robot Docker Deployment
# ============================================================================
#
# This file contains all environment variables used by the Docker Compose
# configuration for deploying the robot on Raspberry Pi.
#
# SETUP INSTRUCTIONS:
# 1. Copy this file to .env in the same directory:
#    cp .env.robot-pi.example .env
# 2. Edit .env and fill in your specific values
# 3. Deploy with: docker compose -f compose.robot-pi.yaml up -d
#
# ============================================================================

# ----------------------------------------------------------------------------
# ROS2 Configuration
# ----------------------------------------------------------------------------

# ROS2 Domain ID - Used for network isolation between multiple ROS2 systems
# Valid range: 0-101 (default: 0)
# Use different domain IDs if you have multiple robots on the same network
ROS_DOMAIN_ID=0

# ROS2 Middleware Implementation
# Options: rmw_fastrtps_cpp (default), rmw_cyclonedds_cpp
# FastRTPS is recommended for most use cases
# Note: This is set in the compose file and typically doesn't need to be changed
# RMW_IMPLEMENTATION=rmw_fastrtps_cpp

# ----------------------------------------------------------------------------
# Robot Configuration
# ----------------------------------------------------------------------------

# Robot Model Name
# Currently only robot_xl is supported
# This is set in the compose file and typically doesn't need to be changed
# ROBOT_MODEL_NAME=robot_xl

# Serial Port for Raspberry Pi Pico
# Default: /dev/ttyACM0
# Change if your Pico appears on a different port
# SERIAL_PORT=/dev/ttyACM0

# Serial Baud Rate
# Default: 115200
# Must match the firmware configuration
# SERIAL_BAUDRATE=115200

# ----------------------------------------------------------------------------
# Tailscale VPN Configuration (Optional)
# ----------------------------------------------------------------------------
# Tailscale provides secure remote access to your robot over the internet
# without port forwarding or complex network configuration.
#
# To use Tailscale:
# 1. Create a Tailscale account at https://tailscale.com
# 2. Generate an auth key at https://login.tailscale.com/admin/settings/keys
# 3. Use a reusable key with appropriate expiration (recommended: 90 days)
# 4. Set the TAILSCALE_AUTHKEY below
#
# If you don't want to use Tailscale, leave TAILSCALE_AUTHKEY empty or commented out

# Tailscale Authentication Key
# Get this from: https://login.tailscale.com/admin/settings/keys
# Use a reusable key for easier deployment across multiple robots
# Example: tskey-auth-k1234567890ABCDEF-1234567890ABCDEF1234567890ABCD
TAILSCALE_AUTHKEY=

# Tailscale Hostname
# This is the name your robot will appear as in the Tailscale network
# Default: robot-xl
# Change this if you have multiple robots to distinguish them
TAILSCALE_HOSTNAME=robot-xl

# Tailscale Subnet Routes (Advanced)
# Advertise subnet routes for multi-robot networks
# Example: 192.168.1.0/24,10.0.0.0/24
# Leave empty for most use cases
# TAILSCALE_SUBNET_ROUTES=

# ----------------------------------------------------------------------------
# Device Configuration
# ----------------------------------------------------------------------------

# USB Camera Device
# Default: /dev/video0
# Change if your camera appears on a different device
# CAMERA_DEVICE=/dev/video0

# ----------------------------------------------------------------------------
# Logging Configuration
# ----------------------------------------------------------------------------

# Log Level
# Options: DEBUG, INFO, WARN, ERROR, FATAL
# Default: INFO
# LOG_LEVEL=INFO

# ROS2 Log Directory
# Default: /var/log/robot
# This is where container logs will be written on the host
# ROS_LOG_DIR=/var/log/robot

# ----------------------------------------------------------------------------
# Network Configuration (Advanced)
# ----------------------------------------------------------------------------

# ROS Localhost Only
# Set to 1 to restrict ROS2 communication to localhost only
# Set to 0 to allow network communication (required for Tailscale)
# Default: 0
# ROS_LOCALHOST_ONLY=0

# CycloneDDS Configuration URI
# Leave empty to disable CycloneDDS configuration
# Only set this if you're using CycloneDDS middleware
# CYCLONEDDS_URI=

# ----------------------------------------------------------------------------
# Volume Mount Paths (Advanced)
# ----------------------------------------------------------------------------
# These paths are used for persistent storage on the host system
# Create these directories before starting containers:
#   sudo mkdir -p /var/log/robot /etc/robot /var/lib/tailscale
#   sudo chown -R $USER:$USER /var/log/robot /etc/robot /var/lib/tailscale

# Host path for robot logs
# HOST_LOG_PATH=/var/log/robot

# Host path for robot configuration
# HOST_CONFIG_PATH=/etc/robot

# Host path for Tailscale state
# HOST_TAILSCALE_PATH=/var/lib/tailscale

# ----------------------------------------------------------------------------
# Docker Image Configuration
# ----------------------------------------------------------------------------

# Docker image to use
# Options:
#   - goldjunge491/robot:humble-arm64 (Docker Hub - default)
#   - ghcr.io/OWNER/robot:humble-arm64 (GitHub Container Registry)
# Replace OWNER with your GitHub username or organization
# Default: goldjunge491/robot:humble-arm64
DOCKER_IMAGE=goldjunge491/robot:humble-arm64

# For GitHub Container Registry, use:
# DOCKER_IMAGE=ghcr.io/yourusername/robot:humble-arm64

# Docker image tag
# Default: humble-arm64 (as specified above)
# Use specific version tags for production deployments:
# DOCKER_IMAGE=goldjunge491/robot:humble-arm64-20241016-abc1234
# DOCKER_IMAGE=ghcr.io/yourusername/robot:humble-arm64-20241016-abc1234

# ----------------------------------------------------------------------------
# Notes
# ----------------------------------------------------------------------------
#
# 1. Required Variables:
#    - ROS_DOMAIN_ID (default: 0)
#    - All other variables have sensible defaults
#
# 2. Optional Variables:
#    - TAILSCALE_AUTHKEY (for remote access)
#    - TAILSCALE_HOSTNAME (for custom robot name)
#
# 3. Security:
#    - Never commit .env file to version control
#    - Keep your Tailscale auth key secure
#    - Rotate auth keys periodically
#
# 4. Troubleshooting:
#    - Check logs: docker compose -f compose.robot-pi.yaml logs -f
#    - Check status: docker compose -f compose.robot-pi.yaml ps
#    - Verify Tailscale: docker exec robot-bringup tailscale status
#    - List topics: docker exec robot-bringup ros2 topic list
#
# 5. Multiple Robots:
#    - Use different TAILSCALE_HOSTNAME for each robot
#    - Consider using different ROS_DOMAIN_ID values
#    - Use unique auth keys or reusable keys with appropriate ACLs
#
# ============================================================================
