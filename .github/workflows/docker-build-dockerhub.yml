---
name: Build Robot Pi Docker Image (Docker Hub)

permissions:
  contents: read

on:
  push:
    branches:
      - main
      - humble
      - 001-feature-hal-mit
    paths:
      - 'docker/Dockerfile.robot-pi'
      - 'docker/compose.robot-pi.yaml'
      - 'src/**'
      - '.github/workflows/docker-build-dockerhub.yml'
  workflow_dispatch:
    inputs:
      tag_suffix:
        description: 'Optional tag suffix (e.g., "beta", "rc1")'
        required: false
        type: string
        default: ''

jobs:
  build-and-push:
    runs-on: ubuntu-22.04
    
    steps:
      - name: Check Docker Hub credentials
        id: check-secrets
        run: |
          if [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ] || [ -z "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            echo "üîß Docker Hub credentials not configured - skipping build"
            echo ""
            echo "To enable Docker Hub builds:"
            echo "1. Go to Settings ‚Üí Secrets and variables ‚Üí Actions"
            echo "2. Add DOCKERHUB_USERNAME and DOCKERHUB_TOKEN secrets"
            echo "3. Create Docker Hub repository: {username}/robot"
            echo ""
            echo "GHCR builds will continue: ghcr.io/${{ github.repository }}"
          else
            echo "skip=false" >> $GITHUB_OUTPUT
            echo "‚úÖ Docker Hub credentials found"
            echo "Building for repository: ${{ secrets.DOCKERHUB_USERNAME }}/robot"
          fi

      - name: Checkout repository
        if: steps.check-secrets.outputs.skip != 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        if: steps.check-secrets.outputs.skip != 'true'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        if: steps.check-secrets.outputs.skip != 'true'
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest

      - name: Log in to Docker Hub
        if: steps.check-secrets.outputs.skip != 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract version from commit
        if: steps.check-secrets.outputs.skip != 'true'
        id: version
        run: |
          # Get short commit SHA
          SHORT_SHA=$(git rev-parse --short HEAD)
          
          # Get current date in YYYYMMDD format
          BUILD_DATE=$(date +%Y%m%d)
          
          # Get branch name
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          
          # Construct version tag
          VERSION_TAG="${BUILD_DATE}-${SHORT_SHA}"
          
          # Add optional suffix if provided
          if [ -n "${{ inputs.tag_suffix }}" ]; then
            VERSION_TAG="${VERSION_TAG}-${{ inputs.tag_suffix }}"
          fi
          
          echo "version=${VERSION_TAG}" >> $GITHUB_OUTPUT
          echo "short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "build_date=${BUILD_DATE}" >> $GITHUB_OUTPUT
          echo "branch=${BRANCH_NAME}" >> $GITHUB_OUTPUT

      - name: Generate Docker metadata
        if: steps.check-secrets.outputs.skip != 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/robot
          tags: |
            type=raw,value=humble-arm64
            type=raw,value=humble-arm64-${{ steps.version.outputs.version }}
            type=raw,value=latest-arm64,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,prefix=humble-arm64-,format=short

      - name: Build and push Docker image
        if: steps.check-secrets.outputs.skip != 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile.robot-pi
          platforms: linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            org.opencontainers.image.title=my_steel Robot
            org.opencontainers.image.description=ROS2 Humble robot software for Raspberry Pi 4B
            org.opencontainers.image.version=${{ steps.version.outputs.version }}
            org.opencontainers.image.created=${{ steps.version.outputs.build_date }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/robot:buildcache-arm64-v2
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/robot:buildcache-arm64-v2,mode=max
          build-args: |
            BUILD_DATE=${{ steps.version.outputs.build_date }}
            VCS_REF=${{ steps.version.outputs.short_sha }}

      - name: Generate build summary
        if: steps.check-secrets.outputs.skip != 'true'
        run: |
          echo "## Docker Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** ${{ secrets.DOCKERHUB_USERNAME }}/robot" >> $GITHUB_STEP_SUMMARY
          echo "**Platform:** linux/arm64" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ steps.version.outputs.short_sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ steps.version.outputs.branch }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Tags" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Pull Command" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/robot:humble-arm64" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Verify image push success
        if: steps.check-secrets.outputs.skip != 'true'
        run: |
          echo "‚úÖ Image build and push completed successfully"
          echo "üì¶ Available images:"
          echo "  - ${{ secrets.DOCKERHUB_USERNAME }}/robot:humble-arm64"
          echo "  - ${{ secrets.DOCKERHUB_USERNAME }}/robot:humble-arm64-${{ steps.version.outputs.version }}"
          echo ""
          echo "üîç To verify on ARM64 device:"
          echo "  docker pull ${{ secrets.DOCKERHUB_USERNAME }}/robot:humble-arm64"
          echo ""
          echo "Note: Image validation skipped - ARM64 image cannot run on AMD64 GitHub runner"
